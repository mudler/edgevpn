name: Test

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
      
      - name: Build
        run:
            go build
      
      - name: Generate edgevpnconfig
        run: |
              ./edgevpn -g > config.yaml


      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: connection
          path: config.yaml
          if-no-files-found: error
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: edgevpn
          path: edgevpn
          if-no-files-found: error
  
  test-suite:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: connection
          path: ./
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: edgevpn
          path: ./
      - name: Test suite
        run: |
              sudo sysctl -w net.core.rmem_max=2500000
              chmod +x edgevpn
              EDGEVPNCONFIG=config.yaml ./.github/tests.sh
      - name: Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          file: coverage.txt
          
  vpntest:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        include:
          - ip: "10.1.0.13/24"
            target_ip: "10.1.0.11"
            role: "download"
          - ip: "10.1.0.11/24"
            target_ip: "10.1.0.13"
            role: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: connection
          path: ./
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: edgevpn
          path: ./
      - name: Ping test
        run: |
              # Start caddy server to share file across nodes
              docker run -d -p 80:80 \
                -v $PWD/:/usr/share/caddy/ \
                -v caddy_data:/data \
                caddy
              chmod +x edgevpn
              sudo sysctl -w net.core.rmem_max=2500000
              sudo EDGEVPNCONFIG=config.yaml IFACE=edgevpn0 ADDRESS=${{ matrix.ip }} ./edgevpn --api --log-level debug &
              bash ./.github/vpntest.sh ${{ matrix.target_ip }} ${{ matrix.ip }} ${{ matrix.role }}

  servicestest:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        include:
          - role: "expose"
          - role: "connect"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: connection
          path: ./
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: edgevpn
          path: ./
      - name: Services test
        run: |
              chmod +x edgevpn
              export EDGEVPNCONFIG=config.yaml
              sudo sysctl -w net.core.rmem_max=2500000
              bash ./.github/servicestest.sh ${{ matrix.role }}

  filestest:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        include:
          - role: "sender"
          - role: "receiver"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: connection
          path: ./
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: edgevpn
          path: ./
      - name: File test
        run: |
              chmod +x edgevpn
              export EDGEVPNCONFIG=config.yaml
              sudo sysctl -w net.core.rmem_max=2500000
              bash ./.github/filetest.sh ${{ matrix.role }}
